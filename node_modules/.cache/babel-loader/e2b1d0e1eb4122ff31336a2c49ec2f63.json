{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomcg\\\\desktop\\\\thinkful\\\\ReactUnitProjects\\\\scrap-chef\\\\src\\\\components\\\\addingredient.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addToKitchen } from '../actions';\nimport { fetchMenu } from '../actions';\nexport class AddingIngredient extends React.Component {\n  onSubmit(event) {\n    event.preventDefault();\n    var text = this.textInput.value.trim();\n    var run = this.props;\n    var blank = this.textInput;\n    run.dispatch(addToKitchen(text));\n    blank.value = ''; // var first = new Promise(function(resolve){\n    //   run.dispatch(addToKitchen(text))\n    //   blank.value = ''\n    //   resolve()\n    // });\n    // first.then(function(){\n    //   console.log(stuff)\n    //   run.dispatch(fetchMenu(stuff))\n    // })\n  } //   componentDidUpdate(prevProps){\n  //     console.log(prevProps.value)\n  //     console.log(this.props.value)\n  //     if(prevProps.value !== this.props.value){ \n  //       console.log(\"action\")\n  //      }\n  //  }\n\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"card add-form\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"ingredient-input\",\n      maxLength: \"25\",\n      name: \"ingredient\",\n      placeholder: \"What else is in your kitchen?\",\n      autoComplete: \"off\",\n      ref: input => this.textInput = input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      name: \"Add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  options: state.options,\n  ingredients: state.ingredients\n});\n\nexport default connect(mapStateToProps)(AddingIngredient);","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\components\\addingredient.js"],"names":["React","connect","addToKitchen","fetchMenu","AddingIngredient","Component","onSubmit","event","preventDefault","text","textInput","value","trim","run","props","blank","dispatch","render","e","input","mapStateToProps","state","options","ingredients"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,OAAO,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAEpDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG,KAAKC,SAAL,CAAeC,KAAf,CAAqBC,IAArB,EAAX;AACA,QAAIC,GAAG,GAAG,KAAKC,KAAf;AACA,QAAIC,KAAK,GAAG,KAAKL,SAAjB;AACAG,IAAAA,GAAG,CAACG,QAAJ,CAAad,YAAY,CAACO,IAAD,CAAzB;AACAM,IAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd,CANc,CAQd;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD,GApBmD,CAsBtD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEM,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKZ,QAAL,CAAcY,CAAd,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACM,MAAA,IAAI,EAAC,MADX;AAEM,MAAA,SAAS,EAAC,kBAFhB;AAGM,MAAA,SAAS,EAAC,IAHhB;AAIM,MAAA,IAAI,EAAC,YAJX;AAKM,MAAA,WAAW,EAAC,+BALlB;AAMM,MAAA,YAAY,EAAC,KANnB;AAOM,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKT,SAAL,GAAiBS,KAPrC;AAQM,MAAA,QAAQ,MARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXJ,CADF;AAoBD;;AAnDmD;;AAsDtD,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADiB;AAEhCC,EAAAA,WAAW,EAAEF,KAAK,CAACE;AAFa,CAAL,CAA7B;;AAKA,eAAetB,OAAO,CAAEmB,eAAF,CAAP,CAA0BhB,gBAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addToKitchen } from '../actions';\r\nimport { fetchMenu } from '../actions';\r\n\r\n\r\nexport class AddingIngredient extends React.Component {\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    var text = this.textInput.value.trim()\r\n    var run = this.props\r\n    var blank = this.textInput\r\n    run.dispatch(addToKitchen(text))\r\n    blank.value = ''\r\n\r\n    // var first = new Promise(function(resolve){\r\n    //   run.dispatch(addToKitchen(text))\r\n    //   blank.value = ''\r\n    //   resolve()\r\n    // });\r\n    // first.then(function(){\r\n\r\n    //   console.log(stuff)\r\n    //   run.dispatch(fetchMenu(stuff))\r\n    // })\r\n  }\r\n\r\n//   componentDidUpdate(prevProps){\r\n//     console.log(prevProps.value)\r\n//     console.log(this.props.value)\r\n//     if(prevProps.value !== this.props.value){ \r\n//       console.log(\"action\")\r\n//      }\r\n//  }\r\n\r\n  render (){\r\n    return (\r\n      <form className=\"card add-form\" onSubmit={(e) => this.onSubmit(e)}>\r\n        <input \r\n              type=\"text\" \r\n              className=\"ingredient-input\" \r\n              maxLength=\"25\" \r\n              name=\"ingredient\" \r\n              placeholder=\"What else is in your kitchen?\"\r\n              autoComplete=\"off\"\r\n              ref={input => this.textInput = input}\r\n              required\r\n          />\r\n          <button \r\n              type=\"submit\" \r\n              name=\"Add\"\r\n          >\r\n              Add\r\n          </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  options: state.options,\r\n  ingredients: state.ingredients\r\n});\r\n\r\nexport default connect (mapStateToProps)(AddingIngredient);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, LOG_IN, CREATE_USER, LOG_OUT, RESIZE } from './actions';\nimport * as actions from './actions';\nvar originalMenu = [{\n  title: \"Nothing yet!\"\n}, {\n  title: \"Add some ingredients from your kitchen!\"\n}];\nconst initialState = {\n  window: 800,\n  username: false,\n  ingredients: [\"eggs\", \"milk\", \"bread\"],\n  options: [\"eggs\", \"milk\", \"bread\"],\n  // options : originalMenu,\n  selected: ''\n};\nexport const reducer = (state = initialState, action) => {\n  if (action.type === RESIZE) {\n    return Object.assign({}, state, {\n      window: window.innerWidth\n    });\n  }\n\n  if (action.type === LOG_OUT) {\n    return Object.assign({}, state, {\n      window: window.innerWidth,\n      username: false,\n      ingredients: [\"eggs\", \"milk\", \"bread\"],\n      options: [],\n      selected: ''\n    });\n  }\n\n  if (action.type === ADD_TO_KITCHEN) {\n    let ingredient = action.ingredient;\n    console.log(ingredient);\n    return Object.assign({}, state, {\n      ingredients: [...state.ingredients, ingredient]\n    });\n  }\n\n  if (action.type === REMOVE_FROM_KITCHEN) {\n    let item = action.item;\n    console.log(item);\n    var array = [...state.ingredients];\n    var index = state.ingredients.indexOf(item);\n    array.splice(index, 1);\n    return Object.assign({}, state, {\n      ingredients: array\n    });\n  }\n\n  if (action.type === UPDATE_MENU) {\n    let newMenu = action.menu.results;\n    return Object.assign({}, state, {\n      options: newMenu // options: array\n      // recipeUrl: recipeUrl\n\n    });\n  }\n\n  if (action.type === FIND_RECIPE) {\n    let choice = action.choice;\n    console.log(\"fetching \" + choice); //API for finding recipe based on CHOICE\n  }\n\n  return state;\n};","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\reducer.js"],"names":["ADD_TO_KITCHEN","REMOVE_FROM_KITCHEN","FIND_RECIPE","UPDATE_MENU","LOG_IN","CREATE_USER","LOG_OUT","RESIZE","actions","originalMenu","title","initialState","window","username","ingredients","options","selected","reducer","state","action","type","Object","assign","innerWidth","ingredient","console","log","item","array","index","indexOf","splice","newMenu","menu","results","choice"],"mappings":"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","sourcesContent":["import {ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, LOG_IN, CREATE_USER, LOG_OUT, RESIZE} from './actions';\r\nimport * as actions from './actions';\r\n\r\nvar originalMenu = [\r\n    {title: \"Nothing yet!\"},\r\n    {title: \"Add some ingredients from your kitchen!\"}]\r\n\r\nconst initialState = {\r\n    window: 800,\r\n    username: false,\r\n    ingredients: [\"eggs\", \"milk\", \"bread\"],\r\n    options: [\"eggs\", \"milk\", \"bread\"],\r\n    // options : originalMenu,\r\n    selected: ''\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    if (action.type === RESIZE) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth\r\n        })\r\n    }\r\n\r\n    if (action.type === LOG_OUT) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth,\r\n            username: false,\r\n            ingredients: [\"eggs\", \"milk\", \"bread\"],\r\n            options: [],\r\n            selected: ''\r\n        });\r\n    }\r\n\r\n    if (action.type === ADD_TO_KITCHEN) {\r\n        let ingredient = action.ingredient;\r\n        console.log(ingredient)\r\n                \r\n        return Object.assign({}, state, {\r\n            ingredients: [...state.ingredients, ingredient]\r\n        })\r\n    }\r\n\r\n    if (action.type === REMOVE_FROM_KITCHEN) {\r\n        let item = action.item;\r\n        console.log(item)\r\n        var array = [...state.ingredients]\r\n        var index = state.ingredients.indexOf(item)\r\n        array.splice(index, 1);\r\n\r\n        return Object.assign({}, state, {\r\n            ingredients: array\r\n        })\r\n    }\r\n\r\n    \r\n    if (action.type === UPDATE_MENU) {\r\n        let newMenu = action.menu.results;\r\n        \r\n\r\n        \r\n        return Object.assign({}, state, {\r\n            options: newMenu\r\n            // options: array\r\n            // recipeUrl: recipeUrl\r\n        })\r\n        \r\n    }\r\n    \r\n    if (action.type === FIND_RECIPE) {\r\n        let choice = action.choice;\r\n        console.log(\"fetching \" + choice)\r\n\r\n        //API for finding recipe based on CHOICE\r\n \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return state;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
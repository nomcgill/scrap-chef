{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomcg\\\\desktop\\\\thinkful\\\\ReactUnitProjects\\\\scrap-chef\\\\src\\\\components\\\\pantry.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { removeFromKitchen } from '../actions';\nexport class Pantry extends React.Component {\n  getRemoving(ingredient) {\n    console.log(\"heard\"); // this.props.dispatch(removeFromKitchen(ingredient))\n  }\n\n  render() {\n    const ingredients = this.props.ingredients.map((ingredient, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"ingredients\",\n      onMouseOver: () => {\n        document.getElementById(\"x-\".concat(ingredient)).classList.remove(\"invisible\");\n      },\n      onMouseOut: () => {\n        document.getElementById(\"x-\".concat(ingredient)).classList.add(\"invisible\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, ingredient, React.createElement(\"span\", {\n      className: \"remove-ingredient invisible\",\n      id: \"x-\".concat(ingredient),\n      onClick: this.getRemoving(ingredient),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"x\")));\n    console.log(ingredients);\n    debugger;\n    return React.createElement(\"div\", {\n      className: \"my-kitchen menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, ingredients));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ingredients: state.ingredients,\n  options: state.options\n});\n\nexport default connect(mapStateToProps)(Pantry);","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\components\\pantry.js"],"names":["React","connect","removeFromKitchen","Pantry","Component","getRemoving","ingredient","console","log","render","ingredients","props","map","index","document","getElementById","classList","remove","add","mapStateToProps","state","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAEA,OAAO,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAE1CC,EAAAA,WAAW,CAACC,UAAD,EAAY;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADqB,CAEnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAAX,CAAuBE,GAAvB,CAA2B,CAACN,UAAD,EAAaO,KAAb,KAC7C;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAC,aAFZ;AAGE,MAAA,WAAW,EAAE,MAAM;AACjBC,QAAAA,QAAQ,CAACC,cAAT,aAA6BT,UAA7B,GAA2CU,SAA3C,CAAqDC,MAArD,CAA4D,WAA5D;AACD,OALH;AAME,MAAA,UAAU,EAAE,MAAM;AAChBH,QAAAA,QAAQ,CAACC,cAAT,aAA6BT,UAA7B,GAA2CU,SAA3C,CAAqDE,GAArD,CAAyD,WAAzD;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGZ,UATH,EAUE;AAAM,MAAA,SAAS,EAAE,6BAAjB;AAAgD,MAAA,EAAE,cAAOA,UAAP,CAAlD;AAAuE,MAAA,OAAO,EAAE,KAAKD,WAAL,CAAiBC,UAAjB,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVF,CADkB,CAApB;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACA;AACA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WADH,CADJ,CADF;AAOD;;AA/ByC;;AAkC5C,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,WAAW,EAAEU,KAAK,CAACV,WADa;AAEhCW,EAAAA,OAAO,EAAED,KAAK,CAACC;AAFiB,CAAL,CAA7B;;AAKA,eAAepB,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,MAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { removeFromKitchen } from '../actions';\r\n\r\nexport class Pantry extends React.Component {\r\n\r\n  getRemoving(ingredient){\r\n    console.log(\"heard\")\r\n      // this.props.dispatch(removeFromKitchen(ingredient))\r\n  }\r\n\r\n  render() {\r\n    const ingredients = this.props.ingredients.map((ingredient, index) => (\r\n      <li \r\n        key={index} \r\n        className=\"ingredients\"\r\n        onMouseOver={() => {\r\n          document.getElementById(`x-${ingredient}`).classList.remove(\"invisible\")\r\n        }}\r\n        onMouseOut={() => {\r\n          document.getElementById(`x-${ingredient}`).classList.add(\"invisible\")\r\n        }}>\r\n        {ingredient}\r\n        <span className={\"remove-ingredient invisible\"} id={`x-${ingredient}`} onClick={this.getRemoving(ingredient)}>x</span>\r\n      </li>\r\n    ))\r\n    console.log(ingredients)\r\n    debugger;\r\n    return (\r\n      <div className=\"my-kitchen menu\">\r\n          <ul>\r\n            {ingredients}\r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ingredients: state.ingredients,\r\n  options: state.options\r\n});\r\n\r\nexport default connect(mapStateToProps)(Pantry);\r\n"]},"metadata":{},"sourceType":"module"}
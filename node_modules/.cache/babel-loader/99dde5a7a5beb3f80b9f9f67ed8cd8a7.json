{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomcg\\\\desktop\\\\thinkful\\\\ReactUnitProjects\\\\scrap-chef\\\\src\\\\components\\\\pantry.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { removeItem } from '../actions'; // Pantry displays the current global state of the user's ingredients.\n// This component will also update the Menu component by calling fetchMenu(), which fetches new results based on user input.\n\nexport class Pantry extends React.Component {\n  getRemoving(item) {\n    this.props.dispatch(removeItem(item, this.props.ingredients));\n  }\n\n  render() {\n    const ingredients = this.props.ingredients.map((ingredient, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"ingredients\",\n      onMouseOver: () => {\n        document.getElementById(\"x-\".concat(ingredient)).classList.remove(\"invisible\");\n      },\n      onMouseOut: () => {\n        document.getElementById(\"x-\".concat(ingredient)).classList.add(\"invisible\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, ingredient, React.createElement(\"span\", {\n      className: \"remove-ingredient invisible\",\n      id: \"x-\".concat(ingredient),\n      onClick: () => {\n        this.getRemoving(ingredient);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"x\")));\n    return React.createElement(\"div\", {\n      className: \"my-kitchen menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, ingredients));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ingredients: state.ingredients,\n  options: state.options\n});\n\nexport default connect(mapStateToProps)(Pantry);","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\components\\pantry.js"],"names":["React","connect","removeItem","Pantry","Component","getRemoving","item","props","dispatch","ingredients","render","map","ingredient","index","document","getElementById","classList","remove","add","mapStateToProps","state","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B,C,CAEA;AACA;;AACA,OAAO,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAE1CC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACX,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,UAAU,CAACI,IAAD,EAAM,KAAKC,KAAL,CAAWE,WAAjB,CAA9B;AACL;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMD,WAAW,GAAG,KAAKF,KAAL,CAAWE,WAAX,CAAuBE,GAAvB,CAA2B,CAACC,UAAD,EAAaC,KAAb,KAC7C;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAC,aAFZ;AAGE,MAAA,WAAW,EAAE,MAAM;AACjBC,QAAAA,QAAQ,CAACC,cAAT,aAA6BH,UAA7B,GAA2CI,SAA3C,CAAqDC,MAArD,CAA4D,WAA5D;AACD,OALH;AAME,MAAA,UAAU,EAAE,MAAM;AAChBH,QAAAA,QAAQ,CAACC,cAAT,aAA6BH,UAA7B,GAA2CI,SAA3C,CAAqDE,GAArD,CAAyD,WAAzD;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGN,UATH,EAUE;AAAM,MAAA,SAAS,EAAE,6BAAjB;AACC,MAAA,EAAE,cAAOA,UAAP,CADH;AAEC,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKP,WAAL,CAAiBO,UAAjB;AAA6B,OAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVF,CADkB,CAApB;AAkBA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,WADH,CADJ,CADF;AAOD;;AAhCyC;;AAmC5C,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,WAAW,EAAEW,KAAK,CAACX,WADa;AAEhCY,EAAAA,OAAO,EAAED,KAAK,CAACC;AAFiB,CAAL,CAA7B;;AAKA,eAAepB,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,MAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { removeItem } from '../actions';\r\n\r\n// Pantry displays the current global state of the user's ingredients.\r\n// This component will also update the Menu component by calling fetchMenu(), which fetches new results based on user input.\r\nexport class Pantry extends React.Component {\r\n\r\n  getRemoving(item){\r\n        this.props.dispatch(removeItem(item,this.props.ingredients))\r\n  }\r\n\r\n  render() {\r\n    const ingredients = this.props.ingredients.map((ingredient, index) => (\r\n      <li \r\n        key={index} \r\n        className=\"ingredients\"\r\n        onMouseOver={() => {\r\n          document.getElementById(`x-${ingredient}`).classList.remove(\"invisible\")\r\n        }}\r\n        onMouseOut={() => {\r\n          document.getElementById(`x-${ingredient}`).classList.add(\"invisible\")\r\n        }}>\r\n        {ingredient}\r\n        <span className={\"remove-ingredient invisible\"}\r\n         id={`x-${ingredient}`}\r\n         onClick={() => {this.getRemoving(ingredient)}}\r\n         >x\r\n         </span>\r\n      </li>\r\n    ))\r\n    return (\r\n      <div className=\"my-kitchen menu\">\r\n          <ul>\r\n            {ingredients}\r\n          </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ingredients: state.ingredients,\r\n  options: state.options\r\n});\r\n\r\nexport default connect(mapStateToProps)(Pantry);\r\n"]},"metadata":{},"sourceType":"module"}
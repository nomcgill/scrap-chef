{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomcg\\\\desktop\\\\thinkful\\\\ReactUnitProjects\\\\scrap-chef\\\\src\\\\components\\\\meals.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { findRecipe } from '../actions';\nimport { fetchMenu } from '../actions';\nimport Menu from './menu';\nimport Missing from './missing';\nimport Kitchen from './kitchen';\nexport class Meals extends React.Component {\n  onRecipeSubmit(event) {\n    event.preventDefault(); // function checkHref(food){\n    //     console.log(food)\n    //     var foodString = food.toString()\n    //     return foodString == document.querySelector('input[name=\"meals\"]:checked').value\n    // }\n\n    var choice = document.querySelector('input[name=\"meals\"]:checked').value.toString();\n    console.log(this.props.options[0]);\n    var index = this.props.options.findIndex(x => x == choice);\n    console.log(choice);\n    console.log(choice.toString());\n    console.log(index); // var newRecipes = this.props.recipes\n    // console.log(newRecipes)\n\n    console.log(this.props.recipes[index]); // var keys = Object.keys(newRecipes)\n    // var index = keys.findIndex(checkHref())\n    // console.log(index)\n    // var index = peoples.findIndex(p => p.attr1 == \"john\")\n    // var index = newRecipes.findIndex(food => newRecipes[food] === newRecipes[choice])\n    // console.log(index)\n\n    if (choice) {// console.log(choice + \" is selected\")\n      // console.log(this.props.recipes)\n      // console.log(newPage + \" is the href\")\n      // this.props.dispatch(findRecipe(choice))\n      //JUST FOR NOW BELOW\n      // this.props.dispatch(fetchMenu())\n    } else {\n      console.log(\"problem in submit\");\n    }\n  } // window.open(\"https://www.w3schools.com\")\n\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.props.dispatch(fetchMenu());\n  }\n\n  render() {\n    if (window.innerWidth <= 800) {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"meal-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        name: \"choose-recipe\",\n        onSubmit: e => this.onRecipeSubmit(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"my-meals menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"recipe-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Missing, {\n        theMissing: this.props.theMissing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        name: \"Recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Get Recipe\")))));\n    } else {\n      return React.createElement(Kitchen, {\n        theMissing: this.props.theMissing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  options: state.options,\n  menu: state.menu,\n  recipes: state.recipes\n});\n\nexport default connect(mapStateToProps)(Meals);","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\components\\meals.js"],"names":["React","connect","findRecipe","fetchMenu","Menu","Missing","Kitchen","Meals","Component","onRecipeSubmit","event","preventDefault","choice","document","querySelector","value","toString","console","log","props","options","index","findIndex","x","recipes","componentDidMount","dispatch","render","window","innerWidth","e","theMissing","mapStateToProps","state","menu"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { findRecipe } from '../actions';\r\nimport { fetchMenu } from '../actions'\r\n\r\n\r\nimport Menu from './menu';\r\nimport Missing from './missing';\r\nimport Kitchen from './kitchen';\r\n\r\n\r\nexport class Meals extends React.Component {\r\n\r\n    onRecipeSubmit(event) {\r\n        event.preventDefault();\r\n        // function checkHref(food){\r\n        //     console.log(food)\r\n        //     var foodString = food.toString()\r\n        //     return foodString == document.querySelector('input[name=\"meals\"]:checked').value\r\n        // }\r\n        var choice = document.querySelector('input[name=\"meals\"]:checked').value.toString()\r\n        console.log(this.props.options[0])\r\n        var index = this.props.options.findIndex(x => \r\n            x == choice)\r\n        console.log(choice)\r\n        console.log(choice.toString())\r\n        console.log(index)\r\n        // var newRecipes = this.props.recipes\r\n        // console.log(newRecipes)\r\n        console.log(this.props.recipes[index])\r\n        // var keys = Object.keys(newRecipes)\r\n        // var index = keys.findIndex(checkHref())\r\n        // console.log(index)\r\n\r\n        // var index = peoples.findIndex(p => p.attr1 == \"john\")\r\n        // var index = newRecipes.findIndex(food => newRecipes[food] === newRecipes[choice])\r\n        // console.log(index)\r\n\r\n        if (choice){\r\n            // console.log(choice + \" is selected\")\r\n            // console.log(this.props.recipes)\r\n            // console.log(newPage + \" is the href\")\r\n            // this.props.dispatch(findRecipe(choice))\r\n            //JUST FOR NOW BELOW\r\n            // this.props.dispatch(fetchMenu())\r\n        }\r\n        else{\r\n            console.log(\"problem in submit\")\r\n        }\r\n    }\r\n\r\n    // window.open(\"https://www.w3schools.com\")\r\n\r\n    componentDidMount() {\r\n        console.log(\"mounted\")\r\n        this.props.dispatch(fetchMenu())\r\n      }\r\n\r\n    render() {\r\n        if (window.innerWidth <= 800){\r\n            return (\r\n            <main>\r\n                <div className=\"meal-side\">\r\n                <form name=\"choose-recipe\" onSubmit={(e) => this.onRecipeSubmit(e)}>\r\n                    <div className=\"my-meals menu\">\r\n                        <Menu />\r\n                    </div>\r\n                    <div className=\"recipe-info\">\r\n                        <Missing \r\n                            theMissing={this.props.theMissing}/>\r\n                        <button type=\"submit\" name=\"Recipe\" >Get Recipe</button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        )}\r\n        else {\r\n            return (\r\n            <Kitchen\r\n                theMissing={this.props.theMissing}\r\n             />\r\n        )}\r\n    } \r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    options: state.options,\r\n    menu: state.menu,\r\n    recipes: state.recipes\r\n})\r\n\r\nexport default connect(mapStateToProps)(Meals);\r\n"]},"metadata":{},"sourceType":"module"}
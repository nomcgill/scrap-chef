{"ast":null,"code":"import { ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, LOG_IN, CREATE_USER, LOG_OUT, RESIZE } from './actions';\nimport * as actions from './actions';\nconst initialState = {\n  window: 800,\n  username: false,\n  ingredients: [\"eggs\", \"milk\", \"bread\"],\n  options: [\"Shrimp Teriyaki\", \"Caesar Salad\"],\n  selected: '',\n  menu: false\n};\nexport const reducer = (state = initialState, action) => {\n  if (action.type === RESIZE) {\n    return Object.assign({}, state, {\n      window: window.innerWidth\n    });\n  }\n\n  if (action.type === LOG_OUT) {\n    return Object.assign({}, state, {\n      window: window.innerWidth,\n      username: false,\n      ingredients: [\"eggs\", \"milk\", \"bread\"],\n      options: [],\n      selected: ''\n    });\n  }\n\n  if (action.type === ADD_TO_KITCHEN) {\n    let ingredient = action.ingredient;\n    console.log(ingredient);\n    return Object.assign({}, state, {\n      ingredients: [...state.ingredients, ingredient]\n    });\n  }\n\n  if (action.type === REMOVE_FROM_KITCHEN) {\n    let item = action.item;\n    console.log(item);\n    var array = [...state.ingredients];\n    var index = state.ingredients.indexOf(item);\n    array.splice(index, 1);\n    return Object.assign({}, state, {\n      ingredients: array\n    });\n  }\n\n  if (action.type === UPDATE_MENU) {\n    let results = action.menu;\n    console.log(results);\n    return Object.assign({}, state, {\n      menu: results // options: array\n      // recipeUrl: recipeUrl\n\n    });\n  }\n\n  if (action.type === FIND_RECIPE) {\n    let choice = action.choice;\n    console.log(\"fetching \" + choice); //API for finding recipe based on CHOICE\n  }\n\n  return state;\n};","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\reducer.js"],"names":["ADD_TO_KITCHEN","REMOVE_FROM_KITCHEN","FIND_RECIPE","UPDATE_MENU","LOG_IN","CREATE_USER","LOG_OUT","RESIZE","actions","initialState","window","username","ingredients","options","selected","menu","reducer","state","action","type","Object","assign","innerWidth","ingredient","console","log","item","array","index","indexOf","splice","results","choice"],"mappings":"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","sourcesContent":["import {ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, LOG_IN, CREATE_USER, LOG_OUT, RESIZE} from './actions';\r\nimport * as actions from './actions';\r\n\r\nconst initialState = {\r\n    window: 800,\r\n    username: false,\r\n    ingredients: [\"eggs\", \"milk\", \"bread\"],\r\n    options: [\"Shrimp Teriyaki\",\"Caesar Salad\"],\r\n    selected: '',\r\n    menu: false\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    if (action.type === RESIZE) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth\r\n        })\r\n    }\r\n\r\n    if (action.type === LOG_OUT) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth,\r\n            username: false,\r\n            ingredients: [\"eggs\", \"milk\", \"bread\"],\r\n            options: [],\r\n            selected: ''\r\n        });\r\n    }\r\n\r\n    if (action.type === ADD_TO_KITCHEN) {\r\n        let ingredient = action.ingredient;\r\n        console.log(ingredient)\r\n                \r\n        return Object.assign({}, state, {\r\n            ingredients: [...state.ingredients, ingredient]\r\n        })\r\n    }\r\n\r\n    if (action.type === REMOVE_FROM_KITCHEN) {\r\n        let item = action.item;\r\n        console.log(item)\r\n        var array = [...state.ingredients]\r\n        var index = state.ingredients.indexOf(item)\r\n        array.splice(index, 1);\r\n\r\n        return Object.assign({}, state, {\r\n            ingredients: array\r\n        })\r\n    }\r\n\r\n    \r\n    if (action.type === UPDATE_MENU) {\r\n        let results = action.menu;\r\n        console.log(results)\r\n        \r\n        return Object.assign({}, state, {\r\n            menu: results\r\n            // options: array\r\n            // recipeUrl: recipeUrl\r\n        })\r\n        \r\n    }\r\n    \r\n    if (action.type === FIND_RECIPE) {\r\n        let choice = action.choice;\r\n        console.log(\"fetching \" + choice)\r\n\r\n        //API for finding recipe based on CHOICE\r\n \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return state;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nomcg\\\\desktop\\\\thinkful\\\\ReactUnitProjects\\\\scrap-chef\\\\src\\\\actions.js\";\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nlet herokuAPIEndpoint = \"https://scrap-chef-server.herokuapp.com/\";\nexport const updateState = (key, value) => dispatch => {\n  dispatch({\n    type: 'UPDATE_STATE',\n    key,\n    value\n  });\n  return Promise.resolve();\n};\nexport const ADD_TO_KITCHEN = 'ADD_TO_KITCHEN';\nexport const addToKitchen = ingredient => ({\n  type: ADD_TO_KITCHEN,\n  ingredient\n});\nexport const REMOVE_FROM_KITCHEN = 'REMOVE_FROM_KITCHEN';\nexport const removeFromKitchen = item => ({\n  type: REMOVE_FROM_KITCHEN,\n  item\n});\nexport const FIND_RECIPE = 'FIND_RECIPE';\nexport const findRecipe = options => ({\n  type: FIND_RECIPE,\n  options\n});\nexport const UPDATE_MENU = 'UPDATE_MENU';\nexport const updateMenu = menu => ({\n  type: UPDATE_MENU,\n  menu\n});\nexport const fetchMenu = ingredients => dispatch => {\n  const recipePuppy = 'https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api?i=';\n  let joinedIngredients = ingredients.join(', ');\n  fetch(recipePuppy + joinedIngredients + '&p=' + 1).then(res => {\n    if (!res.ok) {\n      return Promise.reject(res.statusText);\n    }\n\n    return res.json();\n  }).then(menu => {\n    dispatch(updateMenu(menu));\n  });\n};\nexport const LOG_IN = 'LOG_IN';\nexport const logIn = input => ({\n  type: LOG_IN,\n  input\n});\nexport const atlasLogIn = userInput => dispatch => {\n  const MySwal = withReactContent(Swal);\n  let GETbyUsernameURL = herokuAPIEndpoint + \"find?user=\" + userInput;\n  fetch(GETbyUsernameURL).then(response => {\n    if (response.status === 404) {\n      throw new Error(response.status + \": Username not found.\");\n    }\n\n    if (response.status === 200) {\n      return response.json();\n    }\n  }).then(data => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: '',\n        text: \"Welcome back, Chef \" + data.user + \"!\",\n        type: 'success',\n        confirmButtonText: \"Let's Get Cookin'.\"\n      });\n    });\n    dispatch(logIn(data));\n  }).catch(error => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: 'Hmm...',\n        text: error,\n        type: 'error',\n        confirmButtonText: 'Okay'\n      });\n    });\n  });\n};\nexport const FIRST_CALL = 'FIRST_CALL';\nexport const firstCall = () => ({\n  type: FIRST_CALL\n});\nexport const LOG_OUT = 'LOG_OUT';\nexport const logOut = location => ({\n  type: LOG_OUT,\n  location\n});\nexport const RESIZE = 'RESIZE';\nexport const resize = () => ({\n  type: RESIZE\n});\nexport const SAVE = 'SAVE';\nexport const save = () => ({\n  type: SAVE\n});\nexport const trySave = (id, user, ingredients) => dispatch => {\n  const MySwal = withReactContent(Swal);\n  let postURL = herokuAPIEndpoint + \"users/\" + id;\n  let data = {\n    _id: id,\n    user: user,\n    ingredients: ingredients\n  };\n  fetch(postURL, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(response.statusText);\n  }).then(response => {\n    dispatch(save());\n    return response;\n  }).then(response => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: '',\n        text: response.message,\n        type: 'success',\n        confirmButtonText: \"Back to Cookin'.\"\n      });\n    });\n  }).catch(error => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: 'Hmm...!',\n        text: error,\n        type: 'error',\n        confirmButtonText: 'Okay'\n      });\n    });\n  });\n};\nexport const CREATE_USER = 'CREATE_USER';\nexport const createUser = (newUser, insertedId) => ({\n  type: CREATE_USER,\n  newUser,\n  insertedId\n});\nexport const atlasCreate = (userInput, ingredients) => dispatch => {\n  const MySwal = withReactContent(Swal);\n  let postURL = herokuAPIEndpoint + \"users/\";\n  let data = {\n    user: userInput,\n    ingredients: ingredients\n  };\n  fetch(postURL, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(response.statusText);\n  }).then(response => {\n    if (response.message === \"User already exists.\") {\n      throw new Error(response.message);\n    }\n\n    return response;\n  }).then(response => {\n    dispatch(createUser(response.newUser, response.insertedId));\n    return response;\n  }).then(response => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: '',\n        text: \"Welcome, Chef \" + response.newUser + \"!\",\n        type: 'success',\n        confirmButtonText: \"Let's Get Cookin'.\"\n      });\n    });\n  }).catch(error => {\n    MySwal.fire({\n      title: React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Hello World\"),\n      footer: 'Copyright 2018',\n      onOpen: () => {\n        MySwal.clickConfirm();\n      }\n    }).then(() => {\n      return MySwal.fire({\n        title: 'Hmm...!',\n        text: error,\n        type: 'error',\n        confirmButtonText: 'Okay'\n      });\n    });\n  });\n};","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\actions.js"],"names":["React","Swal","withReactContent","herokuAPIEndpoint","updateState","key","value","dispatch","type","Promise","resolve","ADD_TO_KITCHEN","addToKitchen","ingredient","REMOVE_FROM_KITCHEN","removeFromKitchen","item","FIND_RECIPE","findRecipe","options","UPDATE_MENU","updateMenu","menu","fetchMenu","ingredients","recipePuppy","joinedIngredients","join","fetch","then","res","ok","reject","statusText","json","LOG_IN","logIn","input","atlasLogIn","userInput","MySwal","GETbyUsernameURL","response","status","Error","data","fire","title","footer","onOpen","clickConfirm","text","user","confirmButtonText","catch","error","FIRST_CALL","firstCall","LOG_OUT","logOut","location","RESIZE","resize","SAVE","save","trySave","id","postURL","_id","method","body","JSON","stringify","headers","message","CREATE_USER","createUser","newUser","insertedId","atlasCreate"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nlet herokuAPIEndpoint = \"https://scrap-chef-server.herokuapp.com/\"\r\n\r\nexport const updateState = (key, value)=> dispatch=>{\r\n    dispatch({\r\n          type:'UPDATE_STATE',\r\n          key, value\r\n        })\r\n    return Promise.resolve()\r\n    }\r\n\r\nexport const ADD_TO_KITCHEN = 'ADD_TO_KITCHEN';\r\nexport const addToKitchen = ingredient => ({\r\n    type: ADD_TO_KITCHEN,\r\n    ingredient\r\n});\r\n\r\nexport const REMOVE_FROM_KITCHEN = 'REMOVE_FROM_KITCHEN';\r\nexport const removeFromKitchen = item => ({\r\n    type: REMOVE_FROM_KITCHEN,\r\n    item\r\n});\r\n\r\nexport const FIND_RECIPE = 'FIND_RECIPE';\r\nexport const findRecipe = options => ({\r\n    type: FIND_RECIPE,\r\n    options\r\n});\r\n\r\nexport const UPDATE_MENU = 'UPDATE_MENU';\r\nexport const updateMenu = menu => ({\r\n    type: UPDATE_MENU,\r\n    menu\r\n});\r\n\r\nexport const fetchMenu = (ingredients) => dispatch => {\r\n    const recipePuppy = 'https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api?i='\r\n    let joinedIngredients = ingredients.join(', ')\r\n    fetch(recipePuppy + joinedIngredients + '&p=' + 1)\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                return Promise.reject(res.statusText);\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(menu => {\r\n            dispatch(updateMenu(menu));\r\n        });\r\n}\r\n\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const logIn = input => ({\r\n    type: LOG_IN,\r\n    input\r\n});\r\n\r\nexport const atlasLogIn = (userInput) => dispatch => {\r\n    const MySwal = withReactContent(Swal)\r\n    let GETbyUsernameURL = herokuAPIEndpoint + `find?user=` + userInput\r\n    fetch (GETbyUsernameURL)\r\n    .then(response => {\r\n        if (response.status === 404) {\r\n            throw new Error (response.status + `: Username not found.`);\r\n        }\r\n        if (response.status === 200) {\r\n            return response.json();\r\n        }\r\n    })\r\n    .then(data => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: '',\r\n                text: \"Welcome back, Chef \" + data.user + \"!\",\r\n                type: 'success',\r\n                confirmButtonText: `Let's Get Cookin'.`\r\n              }\r\n            )\r\n          })\r\n          dispatch(logIn(data))\r\n    })\r\n    .catch (error => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: 'Hmm...',\r\n                text: error,\r\n                type: 'error',\r\n                confirmButtonText: 'Okay'\r\n              }\r\n            )\r\n          })\r\n    });\r\n}\r\n\r\nexport const FIRST_CALL = 'FIRST_CALL'\r\nexport const firstCall = () => ({\r\n  type: FIRST_CALL\r\n})\r\n\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const logOut = location => ({\r\n    type: LOG_OUT,\r\n    location\r\n});\r\n\r\nexport const RESIZE = 'RESIZE';\r\nexport const resize = () => ({\r\n    type: RESIZE\r\n});\r\n\r\nexport const SAVE = 'SAVE'\r\nexport const save = () => ({\r\n    type: SAVE\r\n})\r\n\r\nexport const trySave = (id, user, ingredients) => dispatch => {\r\n    const MySwal = withReactContent(Swal)\r\n    let postURL = herokuAPIEndpoint + `users/` + id\r\n    let data = {\r\n        _id: id,\r\n        user: user,\r\n        ingredients: ingredients\r\n    };\r\n\r\n    fetch(postURL, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers:{\r\n        'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    .then( response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error (response.statusText);\r\n    })\r\n    .then( response => {\r\n        dispatch(save())\r\n        return response\r\n    })\r\n    .then( response => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: '',\r\n                text: response.message,\r\n                type: 'success',\r\n                confirmButtonText: `Back to Cookin'.`\r\n              }\r\n            )\r\n          })\r\n    })\r\n    .catch (error => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: 'Hmm...!',\r\n                text: error,\r\n                type: 'error',\r\n                confirmButtonText: 'Okay'\r\n              }\r\n            )\r\n          })\r\n    });\r\n}\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const createUser = (newUser, insertedId) => ({\r\n    type: CREATE_USER,\r\n    newUser,\r\n    insertedId\r\n});\r\n\r\nexport const atlasCreate = (userInput, ingredients) => dispatch => {\r\n    const MySwal = withReactContent(Swal)\r\n    let postURL = herokuAPIEndpoint + `users/`\r\n    let data = {\r\n        user: userInput,\r\n        ingredients: ingredients\r\n    };\r\n    fetch(postURL, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error (response.statusText);\r\n    })\r\n    .then(response => {\r\n        if (response.message === \"User already exists.\"){\r\n            throw new Error (response.message)\r\n        }\r\n        return response\r\n    })\r\n    .then( response => {\r\n        dispatch(createUser(response.newUser, response.insertedId))\r\n        return response\r\n    })\r\n    .then( response => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: '',\r\n                text: \"Welcome, Chef \" + response.newUser + \"!\",\r\n                type: 'success',\r\n                confirmButtonText: `Let's Get Cookin'.`\r\n              }\r\n            )\r\n          })\r\n    })\r\n    .catch (error => {\r\n        MySwal.fire({\r\n            title: <p>Hello World</p>,\r\n            footer: 'Copyright 2018',\r\n            onOpen: () => {\r\n              MySwal.clickConfirm()\r\n            }\r\n          }).then(() => {\r\n            return MySwal.fire(\r\n              {\r\n                title: 'Hmm...!',\r\n                text: error,\r\n                type: 'error',\r\n                confirmButtonText: 'Okay'\r\n              }\r\n            )\r\n          })\r\n    });\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
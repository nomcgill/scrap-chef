{"ast":null,"code":"import { ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, SAVE, LOG_IN, CREATE_USER, LOG_OUT, RESIZE } from './actions';\nvar originalOptions = [{\n  title: \"Nothing yet!\"\n}, {\n  title: \"Add some ingredients from your kitchen!\"\n}];\nconst initialState = {\n  window: 800,\n  username: false,\n  _id: false,\n  ingredients: [\"bread\", \"cheese\", \"tomato\"],\n  options: originalOptions,\n  recipes: [],\n  selected: ''\n};\nexport const reducer = (state = initialState, action) => {\n  if (action.type === RESIZE) {\n    return Object.assign({}, state, {\n      window: window.innerWidth\n    });\n  }\n\n  if (action.type === LOG_OUT) {\n    return Object.assign({}, state, {\n      window: window.innerWidth,\n      username: false,\n      ingredients: [\"eggs\", \"milk\", \"bread\"],\n      options: originalOptions,\n      selected: ''\n    });\n  }\n\n  if (action.type === ADD_TO_KITCHEN) {\n    console.log(\"add to kitchen\");\n    let ingredient = action.ingredient;\n    return Object.assign({}, state, {\n      ingredients: [...state.ingredients, ingredient]\n    });\n  }\n\n  if (action.type === REMOVE_FROM_KITCHEN) {\n    console.log(\"remove from kitchen\"); // let item = action.item;\n\n    var array = [...state.ingredients];\n\n    function checkIng(passed) {\n      return passed !== action.item;\n    } // var index = state.ingredients.indexOf(item)\n    // function deleteSingleItem(array, index){\n    //     return array.filter (passedIn => {\n    //         console.log(passedIn)\n    //         debugger;\n    //         return index != passedIn.index\n    //     })\n    // }\n    // array.splice(index, 1);\n\n\n    return Object.assign({}, state, {\n      ingredients: array.filter(checkIng)\n    });\n  }\n\n  if (action.type === UPDATE_MENU) {\n    let newMenu = [...state.options].filter(function (passed) {\n      return passed === \"None\";\n    });\n    let newerMenu = [...newMenu, action.menu.results];\n    console.log(state.options);\n    console.log(newerMenu[0]);\n    var recipeStore = [];\n    newerMenu.forEach(function (food) {\n      var href = food.href;\n      recipeStore.push(href);\n    }); // options: originalOptions,\n    // console.log(state.options)\n\n    return Object.assign({}, state, {\n      options: newerMenu[0],\n      recipes: recipeStore\n    });\n  }\n\n  if (action.type === FIND_RECIPE) {\n    let recipes = action.recipes;\n    var choice = document.querySelector('input[name=\"meals\"]:checked').value;\n    var recipeUrl = recipes[choice];\n\n    if (choice) {\n      window.open(recipeUrl);\n    }\n  }\n\n  if (action.type === LOG_IN) {\n    var input = action.input;\n    return Object.assign({}, state, {\n      username: input.user,\n      ingredients: input.ingredients,\n      _id: input._id\n    });\n  }\n\n  if (action.type === CREATE_USER) {\n    return Object.assign({}, state, {\n      username: action.newUser,\n      _id: action.insertedId\n    });\n  }\n\n  if (action.type === SAVE) {}\n\n  return state;\n};","map":{"version":3,"sources":["C:\\Users\\nomcg\\desktop\\thinkful\\ReactUnitProjects\\scrap-chef\\src\\reducer.js"],"names":["ADD_TO_KITCHEN","REMOVE_FROM_KITCHEN","FIND_RECIPE","UPDATE_MENU","SAVE","LOG_IN","CREATE_USER","LOG_OUT","RESIZE","originalOptions","title","initialState","window","username","_id","ingredients","options","recipes","selected","reducer","state","action","type","Object","assign","innerWidth","console","log","ingredient","array","checkIng","passed","item","filter","newMenu","newerMenu","menu","results","recipeStore","forEach","food","href","push","choice","document","querySelector","value","recipeUrl","open","input","user","newUser","insertedId"],"mappings":"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","sourcesContent":["import {ADD_TO_KITCHEN, REMOVE_FROM_KITCHEN, FIND_RECIPE, UPDATE_MENU, SAVE, LOG_IN, CREATE_USER, LOG_OUT, RESIZE} from './actions';\r\n\r\nvar originalOptions = [\r\n    {title: \"Nothing yet!\"},\r\n    {title: \"Add some ingredients from your kitchen!\"}]\r\n\r\nconst initialState = {\r\n    window: 800,\r\n    username: false,\r\n    _id: false,\r\n    ingredients: [\"bread\", \"cheese\", \"tomato\"],\r\n    options: originalOptions,\r\n    recipes: [],\r\n    selected: ''\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    if (action.type === RESIZE) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth\r\n        })\r\n    }\r\n\r\n    if (action.type === LOG_OUT) {\r\n        return Object.assign({}, state, {\r\n            window: window.innerWidth,\r\n            username: false,\r\n            ingredients: [\"eggs\", \"milk\", \"bread\"],\r\n            options: originalOptions,\r\n            selected: ''\r\n        });\r\n    }\r\n\r\n    if (action.type === ADD_TO_KITCHEN) {\r\n        console.log(\"add to kitchen\")\r\n        let ingredient = action.ingredient;\r\n                \r\n        return Object.assign({}, state, {\r\n            ingredients: [...state.ingredients, ingredient]\r\n        })\r\n    }\r\n\r\n    if (action.type === REMOVE_FROM_KITCHEN) {\r\n        console.log(\"remove from kitchen\")\r\n        // let item = action.item;\r\n        var array = [...state.ingredients]\r\n        function checkIng(passed){\r\n            return passed !== action.item\r\n        }\r\n        // var index = state.ingredients.indexOf(item)\r\n        // function deleteSingleItem(array, index){\r\n        //     return array.filter (passedIn => {\r\n        //         console.log(passedIn)\r\n        //         debugger;\r\n        //         return index != passedIn.index\r\n        //     })\r\n        // }\r\n        // array.splice(index, 1);\r\n\r\n        return Object.assign({}, state, {\r\n            ingredients: array.filter(checkIng)\r\n        })\r\n    }\r\n\r\n    if (action.type === UPDATE_MENU) {\r\n        let newMenu = [...state.options].filter(function(passed){\r\n            return passed === \"None\"\r\n        })\r\n        let newerMenu = [...newMenu, action.menu.results];\r\n        console.log(state.options)\r\n        console.log(newerMenu[0])\r\n        var recipeStore = []\r\n        newerMenu.forEach(function(food) {\r\n            var href = food.href\r\n            recipeStore.push(href)\r\n        })\r\n        // options: originalOptions,\r\n        // console.log(state.options)\r\n\r\n        return Object.assign({}, state, {\r\n            options: newerMenu[0],\r\n            recipes: recipeStore\r\n        })\r\n        \r\n    }\r\n\r\n    if (action.type === FIND_RECIPE) {\r\n        let recipes = action.recipes\r\n        var choice = document.querySelector('input[name=\"meals\"]:checked').value\r\n        var recipeUrl = recipes[choice]\r\n        if (choice){\r\n            window.open(recipeUrl)\r\n        }\r\n    }\r\n\r\n    if (action.type === LOG_IN) {\r\n        var input = action.input\r\n\r\n        return Object.assign({}, state, {\r\n            username: input.user,\r\n            ingredients: input.ingredients,\r\n            _id: input._id\r\n        })\r\n        \r\n    }\r\n    \r\n    if (action.type === CREATE_USER) {\r\n\r\n        return Object.assign({}, state, {\r\n            username: action.newUser,\r\n            _id: action.insertedId\r\n        })   \r\n    }\r\n    \r\n    if (action.type === SAVE) {\r\n    }\r\n\r\n\r\n\r\n    return state;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}